all:
  vars:
    ansible_connection: docker
    ansible_user: root
    ansible_become: true
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_private_key_file: /tmp/certs/ssh_priv.pem

    sasl_protocol: plain

    control_center:
      properties:
        confluent.controlcenter.id: 2
        confluent.licence: "_CONFLUENT_LICENSE_"
        confluent.controlcenter.schema.registry.basic.auth.credentials.source: USER_INFO
        confluent.controlcenter.schema.registry.basic.auth.user.info: "_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO_"
        confluent.metrics.topic.max.message.bytes: 8388608
        confluent.controlcenter.data.dir: "/data/confluent/control-center"
        confluent.controlcenter.streams.security.protocol: SASL_SSL

    kafka_connect:
      properties:
        plugin.path: /opt/confluent/share/confluent-hub-components,/usr/share/java
        confluent.licence: "_CONFLUENT_LICENSE_"
        #key.converter.schemas.enable: false
        #value.converter.schemas.enable: false 
        #key.converter: org.apache.kafka.connect.json.JsonConverter
        #value.converter: org.apache.kafka.connect.json.JsonConverter 
        config.storage.replication.factor: 3
        offset.storage.replication.factor: 3
        status.storage.replication.factor: 3
        value.converter.basic.auth.credentials.source: USER_INFO
        value.converter.schema.registry.basic.auth.user.info: "_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO_"
        key.converter.basic.auth.credentials.source: USER_INFO
        key.converter.schema.registry.basic.auth.user.info: "_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO_"
        security.protocol: SASL_SSL
        producer.security.protocol: SASL_SSL
        consumer.security.protocol: SASL_SSL
        producer.confluent.monitoring.interceptor.security.protocol: SASL_SSL
        consumer.confluent.monitoring.interceptor.security.protocol: SASL_SSL

    ksql:
      properties:
        confluent.licence: "_CONFLUENT_LICENSE_"
        value.converter.basic.auth.credentials.source: USER_INFO
        value.converter.schema.registry.basic.auth.user.info: "_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO_"
        key.converter.basic.auth.credentials.source: USER_INFO
        key.converter.schema.registry.basic.auth.user.info: "_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO_"
        ksql.streams.replication.factor: 3
        security.protocol: SASL_SSL
        confluent.monitoring.interceptor.security.protocol: SASL_SSL
        ksql.internal.topic.replicas: 3
        ksql.streams.state.dir: "/data/confluent/ksql"

    sasl_plain_users:
      control_center:
        principal: "_CLOUD_KEY_"
        password: "_CLOUD_SECRET_"
      kafka_connect:
        principal: "_CLOUD_KEY_"
        password: "_CLOUD_SECRET_"
      ksql:
        principal: "_CLOUD_KEY_"
        password: "_CLOUD_SECRET_"

    schema_registry_http_protocol: https

kafka_broker:
  hosts:
    _BOOTSTRAP_SERVER_:
schema_registry:
  hosts:
    _SCHEMA_REGISTRY_SERVER_:
kafka_connect:
  hosts:
    connect:
ksql:
  hosts:
    ksql-server:
control_center:
  hosts:
    control-center:

